services:
  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - .env  # Charge toutes les variables du fichier .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_DB)
    ports:
      - "5432:5432"
    networks:
        - youlink_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    container_name: nestappcompose
    build: .
    ports:
      - "3000:3000"
    networks:
      - youlink_network
    env_file:
      - .env
    depends_on:
      - postgres
    command: >
      sh -c "apt-get update -y && apt-get install -y openssl && npm install && npx prisma generate && npx prisma migrate deploy && npm run dev"
    restart: on-failure

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    env_file:
      - .env  # Charge aussi les variables pour pgAdmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "8080:80"  # Mappe le port 80 de pgAdmin au port 8080 de l'h√¥te
    networks:
        - youlink_network
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/YoulinkServer.json:/pgadmin4/YoulinkServer.json
    restart: unless-stopped

networks:
  youlink_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: