generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  email           String         @unique
  password        String
  userName        String         @unique
  is_Professional Boolean        @default(true)
  is_Youtuber     Boolean        @default(true)
  likes           Liked[]
  professional    Professional?
  followers       Subscription[] @relation("follow")
  subscriptions   Subscription[] @relation("subscription")
  youtuber        Youtuber?
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  likes Liked[]
  tags  Tags[]
}

model Liked {
  userId     Int
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@id([userId, categoryId])
}

model Tags {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

model Subscription {
  followedUserId  Int
  subscribeUserId Int
  followedUser    User @relation("follow", fields: [followedUserId], references: [id])
  subscribeUser   User @relation("subscription", fields: [subscribeUserId], references: [id])

  @@id([subscribeUserId, followedUserId])
}

model Youtuber {
  userId     Int    @unique
  tagChannel String
  id         Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [id])
}

model Professional {
  id                     Int    @id @default(autoincrement())
  userId                 Int    @unique
  urlLinkedin            String @unique
  recommandationLinkedin Json
  user                   User   @relation(fields: [userId], references: [id])
}
